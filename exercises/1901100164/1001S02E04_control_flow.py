#打印九九乘法表
#使用两个嵌套的for循环
for i in range(1,10):                 #第一个for，循环的是第一个乘数n从1到9。
    for m in range(1,i+1):            #第二个for，循环的是第二个乘数m，当第二个乘数小于第一个乘数+1时，遍历一遍。
        print(i,'*',m,'=',i*m,end='\t')#此print函数属于第二个for循环
    print(end='\n')                    #此print函数属于第一个for循环，在末尾换行。

#换行，与下一段程序执行结果区分开
pass
print()

#打印九九乘法表并去除偶数行
#使用两个嵌套的while循环
n=1
while n<10:                            #第一个while，循环的是第一个乘数n从1到9
    if n%2==0:                         #判断第一个乘数的奇偶，剔除偶数的n。
        pass
    #我在第一遍写的时候，把if写在了嵌套的while里，虽然也能得出同样的结果，但是要判断多次，后来重新思考优化了，先判断再循环，只需要判断一次。
    else:
        m=1                            #开始必须要先给定一个赋值，变量没有初始值不能直接用。
        while m<=n:                    #第二个while，循环的是第二个乘数m，当第二个乘数小于等于第一个乘数时，将第二个乘数遍历一遍。
            print(n,'*',m,'=',n*m,end='\t') #末尾\t制表符
            m=m+1                      #属于第二个while
        print(end='\n')                #此print函数属于第一个while循环，作用是在每个m循环完成后在末尾换行。如果没有他，结果就会堆在一起，不分行。
    n=n+1                              #此行属于第一个while循环。变量再赋值，开始下一个循环

#n=n+1 注意要放置在正确的语句块里。写了几次才写对。
#对于以下循环
#while
#   if
#   else
#n=n+1           错误 执行结果会无限print 1*1=1，因为放这里就不属于任何一个while循环。会直接从第一个while语句块的最后一行代码（print）跳到while第一行代码开始循环。n=n+1永远不会被执行。所以就一直循环n=1的情况。等同于把n=n+1彻底删掉，也是同样执行结果。
#   n=n+1        正确
#       n=n+1    错误 执行结果会只有一个 1*1=1然后停止。因为放这里依然不属于任何一个while循环。n+1会被执行一次，然后开始第一个while循环，被if pass掉。而这时，因为执行了if，所以后续的else不会被执行了。而这个n+1在else语句块里。所以也不会被执行。所以就停了。

