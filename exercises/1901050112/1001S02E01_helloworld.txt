#资金管理游戏:smile:

"""

* 每次计算机随机生成一个 `1... 10` 之间的整数，再随机生成一个（1-5）之间的数，对（1-5)的随机数进行逻辑判断，如果<=2则返回-1，如果>2 则返回 1，然后将返回值与（0-10）相乘，则
得到胜率（正数）为 60%的随机数值；
* 用户的起始资金都是 100000 个硬币
* 要求用户输入筹码数量：
    * 用户输入 token 即赌注；
    * 用户输入  token 最小值为 10；
    * 用户输入 `q` 代表“退出”；
* 用户筹码和随机产生的倍数相乘：
    * 随机数 大于 2，用户赢；
    * 随机数小于等于 2，用户输；
* 游戏结束条件：
    * 若用户筹码数量小于 10，则游戏结束；
    * 赌局达到 50 次，游戏结束;
    * 用户输入了 `q` 主动终止游戏。

"""


from random import randrange

bank = 100000 # 用户总的赌本
roundOfGames = 0

def bet(dice, token):    # 接收两个参数，一个是倍数，另一个筹码
    money = dice*token
    if dice < 0:
        print(f'the dice is {dice} You LOST {money}!\n')
        return money
    elif dice > 0:
        print(f'the dice is {dice} You WIN {money}!\n')
        return money

while True:         #  除 for 之外的另外一个循环语句
    print(f'You: {bank}\t ')

    token = int(input("What's your bet? "))
    if token < 10:
        break
    elif token > bank:  # 只有当用户筹码大于10，且小于剩余赌本的时候，才“掷骰子”……
        break
    elif token%10 == 0:     # 筹码必须是 10的整数倍
        dice = randrange(1, 11)   # 生成一个1 到 10 的随机数
        i = randrange(1, 6)       # 生成一个1 到 5 的随机数
        if i <=2:                 # 小于等于2 时，返回负数，即用户输掉筹码 ；否则，用户赢；这是一个胜率为 60%的资金管理游戏
            dice = -dice

        result = bet(dice, token)
        bank += result    # bank += result相当于 bank = bank + result
        roundOfGames += 1
    if bank < 10:
        print("Woops, you've LOST ALL, and game over!")
        break
    elif roundOfGames > 50:      #完成 50次游戏没有爆仓，则成功
        print("Woops, you've WIN the game!")
        break

print(f"You've played {roundOfGames}

rounds.\n")
print(f"You have {bank} coins now.\nBye!")
